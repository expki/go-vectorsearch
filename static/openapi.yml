openapi: 3.0.3
info:
  title: API
  description: |-
    Local AI
  version: 1.0.0
tags:
  - name: documents
    description: Everything about documents
paths:
  /api/upload:
    post:
      tags:
        - documents
      summary: Uploads a document for embedding search
      description: |-
        document → formatted → embedding → database
      operationId: upload
      requestBody:
        description: Upload one or more documents at a time
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Invalid request"
        '405':
          description: Invalid method
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Invalid request method"
        '500':
          description: Server exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Internal exception"
  /api/search:
    post:
      tags:
        - documents
      summary: Search for an document embedded
      description: |-
        query → embedding → database → document
      operationId: search
      requestBody:
        description: Search for a set of similar documents
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Invalid request"
        '405':
          description: Invalid method
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Invalid request method"
        '500':
          description: Server exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Internal exception"
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: A description of the exception encountered
          example: "Invalid request"
    UploadRequest:
      type: object
      required: ["documents"]
      properties:
        prefix:
          type: string
          description: Add an optional prefix to the document
          example: "Short Story"
        documents:
          type: array
          description: The documents to embed
          items:
            type: object
          example: [{"story": "Once upon a time"}]
    UploadResponse:
      type: object
      properties:
        document_ids:
          type: array
          description: A list of IDs for the uploaded documents
          items:
           type: integer
          example: [1, 2, 3]
    SearchRequest:
      type: object
      required: ["text", "count"]
      properties:
        prefix:
          type: string
          description: Add an optional prefix to the search query
        text:
          type: string
          description: Main text to search for
        count:
          type: integer
          description: Number of results to return
        offset:
          type: integer
          description: Starting point for the results set
        no_documents:
          type: boolean
          description: Flag to indicate whether to include documents in the response
      example: {"text": "Once upon a time", "count": 2}
    SearchResponse:
      type: object
      properties:
        documents:
          type: array
          description: A list of similar documents, if included in the request.
          items:
            type: object
          example: [{"story": "Once upon a time"}, {"another_story": "In another world"}]
        document_ids:
          type: array
          description: A list of IDs for the similar documents
          items:
           type: integer
          example: [1, 2]
        similarities:
          type: array
          description: A list of similarity scores corresponding to each document
          items:
            type: number
            format: float
          example: [0.95, 0.87]
