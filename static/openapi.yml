openapi: 3.0.3
info:
  title: API
  description: |-
    Local AI
  version: 1.0.0
tags:
  - name: documents
    description: Everything about documents
paths:
  /api/upload:
    post:
      tags:
        - documents
      summary: Uploads a document for embedding search
      description: |-
        document → formatted → embedding → database
      operationId: upload
      requestBody:
        description: Upload one or more documents at a time
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Invalid request"
        '405':
          description: Invalid method
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Invalid request method"
        '500':
          description: Server exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Internal exception"
  /api/search:
    post:
      tags:
        - documents
      summary: Search for an document embedded
      description: |-
        query → embedding → database → document
      operationId: search
      requestBody:
        description: Search for a set of similar documents
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Invalid request"
        '405':
          description: Invalid method
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Invalid request method"
        '500':
          description: Server exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Internal exception"
  /api/chat:
    post:
      tags:
        - documents
      summary: Chat about a document
      description: |-
        query → database → document → chat
      operationId: chat
      requestBody:
        description: Chat about provided documents
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            text/plain:
              schema:
                type: string
              example: |
                The document is written in English
        '400':
          description: Invalid input
          content:
            text/plain:
              schema:
                type: string
              example: |
                Invalid request
        '405':
          description: Invalid method
          content:
            text/plain:
              schema:
                type: string
              example: |
                Invalid request method
        '500':
          description: Server exception
          content:
            text/plain:
              schema:
                type: string
              example: |
                Internal exception
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: A description of the exception encountered
          example: "Invalid request"
    UploadRequest:
      type: object
      required: ["documents"]
      properties:
        prefix:
          type: string
          description: Add an optional prefix to the document
          example: "Short Story"
        documents:
          type: array
          items:
            anyOf:
            - type: string
            - type: array
            - type: object
          description: The documents to embed
          example: ["Once upon a time", ["In a galaxy far, far away"], {"story": "The Force Awakens"}]
    UploadResponse:
      type: object
      properties:
        document_ids:
          type: array
          description: A list of IDs for the uploaded documents
          items:
           type: integer
          example: [1, 2, 3]
    SearchRequest:
      type: object
      required: ["text", "count"]
      properties:
        prefix:
          type: string
          description: Add an optional prefix to the search query
        text:
          type: string
          description: Main text to search for
        count:
          type: integer
          description: Number of results to return
        offset:
          type: integer
          description: Starting point for the results set
        no_documents:
          type: boolean
          description: Flag to indicate whether to include documents in the response
        centroids:
          type: integer
          description: Number of indicies to scan
      example: {"text": "Once upon a time", "count": 2}
    SearchResponse:
      type: object
      properties:
        documents:
          type: array
          description: A list of similar documents, if included in the request.
          items:
            type: object
            properties:
              document_id:
                type: integer
                description: The ID of the similar document
              similarity:
                type: number
                format: float
                description: The similarity score of the document
              document:
                anyOf:
                - type: string
                - type: array
                - type: object
                description: The actual content of the similar document, if included in the request.
          example: [{"document_id": 1, "similarity": 0.95, "document": "Once upon a time"}]
    ChatRequest:
      type: object
      required: ["text"]
      properties:
        prefix:
          type: string
          description: Add an optional prefix to the chat request.
          example: "You are a helpful assistant"
        history:
          type: array
          items:
            type: string
          description: A list of previous messages in the conversation.
          example: ["Hello", "How are you?"]
        text:
          type: string
          description: The current message to process in the chat request.
          example: "Tell me about the document"
        document_ids:
          type: array
          items:
            type: integer
          description: A list of document IDs to include as context for the chat request.
          example: [1, 2]
        documents:
          type: array
          items:
            type: object
          description: A list of documents to include as context for the chat request.
          example: [{"story": "Once upon a time"}, {"another_story": "In another world"}]

